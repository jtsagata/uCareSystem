#!/usr/bin/env bash
#
#    ucaresystem - All-in-one system update and maintenance tool
#    Copyright (C) 2009-2020 Salih Emin <salih@utappia.org>
#
#    Authors: Salih Emin <salih@utappia.org>
#             Ioannis Tsagkatakis <tsagatakis@protonmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -eu
## Ensure this file can only be sourced once
task_timeshift_loaded=${task_timeshift_loaded:-}
if [[ -n ${task_timeshift_loaded} ]]; then
  echo "Warning: This file can only be sourced once"
  return 1
fi
task_timeshift_loaded=true


#
# Make a timeshift backup
#
function action_timeshift() {
  type=${1:-standalone}

  enable_timesfit_q result
  if [[ "${result}" == "no" ]]; then
    return
  fi

  header_text "Make a snapshot with timeshift"

  distribution_id=$(${LSB_RELEASE} --id | cut -f2)
  codename=$(${LSB_RELEASE} --codename | cut -f2)
  label=${distribution_id}-${codename}-${type}
  set -x
  ${EXEC} ${SUDO} ${TIMESHIFT} --create --scripted --comments "$label"
  { set +x; } 2>/dev/null
  sleep ${WAIT_ACTION}
}

#
# Check if timeshift action is to be done
#
function enable_timesfit_q() {
  local -n _ret=$1
  local enable
  local timeshift_type
  enable=$ENABLE_TIMESHIFT

  # Enable timeshift if
  #   a) program exists
  #   b) filesystem is btrfs
  #   c) config option is set to `auto`
  if [[ "${enable,,}" == "auto" ]]; then
    if [[ -x "${TIMESHIFT}" ]]; then
      timeshift_type=$(${EXEC} ${SUDO} ${TIMESHIFT} --list | ${AWK} '/^Mode/ {print $3}')
      if [ "${timeshift_type,,}" == "btrfs" ]; then
        enable=yes
      else
        enable=no
      fi
    else
      enable=no
    fi
  fi

  case "${enable,,}" in
  "no" | "false" | "0")
    _ret="no"
    ;;
  "yes" | "true" | "1")
    # check if executable is present
    if [ -z "${TIMESHIFT}" ]; then
      echo "Error: Bad Configuration timeshift is missing. Configuration key TIMESHIFT='$TIMESHIFT'"
      return
    fi
    _ret="yes"
    ;;
  *)
    echo "Error: Bad Configuration key 'ENABLE_TIMESHIFT=$ENABLE_TIMESHIFT'"
    exit 2
    ;;
  esac
}


#
# Standalone
#
if [[ "${FUNCNAME[0]}" != source ]]; then
  base_dir=$(dirname "$0")
  source "${base_dir}"/base

  EXEC=${EXEC:-}
  check_root_priv
  action_timeshift standalone
fi

