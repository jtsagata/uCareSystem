#!/bin/bash
#
#    ucaresystem - All-in-one system update and maintenance tool
#    Copyright:
#       2009 Salih Emin <salih@utappia.org>
#       2020 Ioannis Tsagatakis <tsagatakis@protonmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC2154,SC2034
# lib_dir will change to point at /usr/lib/ucaresystem during packaging
lib_dir=$(dirname "$0")
share_dir="$(dirname "$0")/../assets"
# shellcheck source=config
source "${lib_dir}/config"
trap trap_handler SIGHUP SIGINT SIGQUIT SIGABRT

function show_banner() {
  if [[ -z "$NO_COLOR" &&  -x "$(command -v lolcat)" && "${FLAGS_wait_gui}" == "0" ]]; then
    # local rand=$RANDOM
    lolcat --seed=19831 "$BANNER_FILE"
    # echo "nice seed $RANDOM"
  else
    cat "$BANNER_FILE"
  fi
  echo
  simulation_message

  if [[ "${FLAGS_ask_confirm}" == "${FLAGS_TRUE}" ]]; then
    repeat_message keypres "Press 'Y' to accept, or any key to cancel. Fire! in " "${BANNER_WAIT}"
    case $keypres in
    yY) return ;;
    esac
    close_window "Canceled!" 1
  fi
}

setup_ucaresystem_cli_flags
setup_common_flags
FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

common_cmd_options
load_config_file

declare extra_flags
[[ -z $FLAGS_mode ]] && FLAGS_mode=$DEFAULT_MODE
[[ "${FLAGS_dryrun}" == "${FLAGS_TRUE}" ]] && extra_flags="${extra_flags} --dryrun"
[[ "${FLAGS_disable_timeshift}" == "${FLAGS_TRUE}" ]] && extra_flags="${extra_flags} --disable-timeshift"

# Show the banner
# shellcheck disable=SC2154
[[ "${FLAGS_banner}" == "${FLAGS_TRUE}" ]] && show_banner

echo "Request mode=${FLAGS_mode}, extra_flags=${extra_flags}"

exit

MODE="${DEFAULT_MODE}"
UPGRADE_MODE="next"
SHOW_BANNER=true
EXEC=""
DO_WAIT=false

# --help and --version is not our worries
# So must always check root privileges.
check_root_priv

if [ "$SHOW_BANNER" == true ]; then
  welcome_screen
else
  echo "${GREEN}ucaresystem${NORMAL}: All-in-one System Update and maintenance tool."
fi

case "$MODE" in
"maintain")
  source "${base_dir}"/task_check_eol
  source "${base_dir}"/task_maintain
  source "${base_dir}"/task_cleanup
  source "${base_dir}"/task_timeshift
  check_eol
  action_timeshift maintain
  action_maintain
  action_clean
  ;;
"clean")
  source "${base_dir}"/task_check_eol
  source "${base_dir}"/task_cleanup
  source "${base_dir}"/task_timeshift
  check_eol
  action_timeshift clean
  action_clean
  ;;
"upgrade")
  action_upgrade "${UPGRADE_MODE}"
  ;;
esac

check_reboot
header_text "Done"

if [ "$DO_WAIT" == true ]; then
  echo
  read -r -p "Press enter to close the window"
fi
