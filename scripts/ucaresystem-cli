#!/bin/bash
#
#    ucaresystem - All-in-one system update and maintenance tool
#    Copyright:
#       2009 Salih Emin <salih@utappia.org>
#       2020 Ioannis Tsagatakis <tsagatakis@protonmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

# lib_dir will change to point at /usr/lib/ucaresystem during packaging
lib_dir=$(dirname "$0")
# shellcheck disable=SC2034
share_dir="$(dirname "$0")/../assets"
# shellcheck source=config
source "${lib_dir}/config"
trap trap_handler 1 2 3 6

# shellcheck disable=SC2145
function overwrite() { echo -e "\r\033[1A\033[0K$@"; }

function show_banner() {
  ! cat "$BANNER_FILE"

  echo
  echo
  wait="${BANNER_WAIT}"
  while [[ $wait != 0 ]]; do
    overwrite "Press 'N' to cancel, press 'Y' or wait ${wait} secs to continue ..."
    read -t 1 -n 1 -r yn
    case $yn in
    [Yy]* )
      break
    ;;
    [nN]* )
      clear
      echo "Cancelled. Press any key to close window..."
      exit
    ;;
    esac

    wait="$((wait - 1))"
  done

  scrolines=900
  while [[ scrolines != 0 ]]; do
    echo "${GREEN}green${RED}redScrolline${NORMAL} ll adkjal d${scrolines}"
    sleep 0.5
    scrolines="$((scrolines - 1))"
  done

  if [ "${ASK_CONFIRM}" == "true" ]; then
    ask_yesno "Are you sure ?" resp
    if [[ "${resp}" == "no" ]]; then
      exit 1
    fi
  fi
}

DEFINE_string 'mode' "" 'Specify mode of operation (maintain,clean,info,dist-upgrade, timeshift)'
DEFINE_boolean 'maintain' false 'Maintain system' 'm'
DEFINE_boolean 'clean' false 'Reclaim some disk space' 'c'
DEFINE_boolean 'sysinfo' false 'Get information about eol status' 's'
DEFINE_boolean 'timeshift' false 'Make a snapshot with timeshift' 't'
DEFINE_boolean 'dist-upgrade' false 'Update distribution'
DEFINE_boolean 'banner' true 'Show banner'
DEFINE_boolean 'ask-confirm' true 'Ask confirm'
DEFINE_boolean 'wait-gui' false 'Wait to close the window'

setup_common_flags
FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

common_cmd_options
load_config_file

declare extra_flags
[[ -z $FLAGS_mode ]] && FLAGS_mode=$DEFAULT_MODE

# shellcheck disable=SC2154
[[ "${FLAGS_dryrun}" == "${FLAGS_TRUE}" ]] && extra_flags="${extra_flags} --dryrun"

# shellcheck disable=SC2154
[[ "${FLAGS_disable_timeshift}" == "${FLAGS_TRUE}" ]] && extra_flags="${extra_flags} --disable-timeshift"

# Show the banner
# shellcheck disable=SC2154
[[ "${FLAGS_banner}" == "${FLAGS_TRUE}" ]] && show_banner

echo "Request mode=${FLAGS_mode}, extra_flags=${extra_flags}"

exit

MODE="${DEFAULT_MODE}"
UPGRADE_MODE="next"
SHOW_BANNER=true
EXEC=""
DO_WAIT=false

# --help and --version is not our worries
# So must always check root privileges.
check_root_priv

if [ "$SHOW_BANNER" == true ]; then
  welcome_screen
else
  echo "${GREEN}ucaresystem${NORMAL}: All-in-one System Update and maintenance tool."
fi

case "$MODE" in
"maintain")
  source "${base_dir}"/task_check_eol
  source "${base_dir}"/task_maintain
  source "${base_dir}"/task_cleanup
  source "${base_dir}"/task_timeshift
  check_eol
  action_timeshift maintain
  action_maintain
  action_clean
  ;;
"clean")
  source "${base_dir}"/task_check_eol
  source "${base_dir}"/task_cleanup
  source "${base_dir}"/task_timeshift
  check_eol
  action_timeshift clean
  action_clean
  ;;
"upgrade")
  action_upgrade "${UPGRADE_MODE}"
  ;;
esac

check_reboot
header_text "Done"

if [ "$DO_WAIT" == true ]; then
  echo
  read -r -p "Press enter to close the window"
fi
